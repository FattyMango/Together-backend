services:
  # Redis for caching #
  redis-master:
    image: redis:latest
    expose:
      - "${ENV_REDIS_MASTER_PORT}"
    volumes:
      - broker-data:/data
    networks:
      - backend


  redis-slave:
    image: redis:latest
    command: redis-server --port ${ENV_REDIS_SLAVE_PORT} --slaveof redis-master ${ENV_REDIS_MASTER_PORT}
    expose:
      - "${ENV_REDIS_SLAVE_PORT}"
    volumes:
      - broker-data:/data
    depends_on:
      - redis-master
    networks:
      - backend


# Redis/Rabbitmq for msg queue #
  redis-broker:
    image: "redis:latest"
    command: redis-server --port ${ENV_REDIS_BROKER_PORT}
    networks:
      - backend

  db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
    expose:
      - "${ENV_POSTGRES_PORT}"

    volumes:
      - pgdata:/var/lib/postgres/data
    networks:
      - backend
# django:
#     build:
#       context: .
#       dockerfile: prod/dockerfile
#     container_name: django
#     command:  gunicorn $PROJECT_NAME.wsgi:application --bind $GUNICORN_IP:$GUNICORN_PORT
# # daphne -b $DAPHNE_IP -p $DAPHNE_PORT $PROJECT_NAME.asgi:application 

#     expose:
#       - 8000
#       - 8001
#     env_file:
#       - ".env"
#     environment:
#       - CONTAINER=django
#     volumes:
#       - .:/code
#       - static_volume:/home/app/django/staticfiles

#     networks:
#       - backend
#     depends_on:
#       - redis-master
#       - db
  gunicorn:
    build:
      context: .
      dockerfile: prod/dockerfile
    container_name: gunicorn
    command:  gunicorn $PROJECT_NAME.wsgi:application --bind $GUNICORN_IP:$GUNICORN_PORT

    expose:
      - 8000
    env_file:
      - ".env"
    environment:
      - CONTAINER=django
    volumes:
      - .:/code
      - static_volume:/home/app/django/staticfiles

    networks:
      - backend
    depends_on:
      - redis-master
      - db


  daphne:
    build:
      context: .
      dockerfile: prod/dockerfile
    container_name: daphne
    command:  daphne -b $DAPHNE_IP -p $DAPHNE_PORT $PROJECT_NAME.asgi:application 

    expose:
      - 8001
    env_file:
      - ".env"
    environment:
      - CONTAINER=django
    volumes:
      - .:/code
      - static_volume:/home/app/django/staticfiles
    networks:
      - backend
    depends_on:
      - redis-master
      - db

  celery:
    build:
      context: .
      dockerfile: prod/dockerfile
    command: celery -A server worker -l INFO --concurrency 3 -E
    volumes:
      - .:/code

    env_file:
      - ".env"
    networks:
      - backend
    depends_on:
      - gunicorn
      - daphne
      - redis-broker
  
  nginx:
    build: ./nginx
    ports:
      - 80:80
    depends_on:
      - gunicorn
      - daphne
    volumes:
      - static_volume:/home/app/django/staticfiles

    networks:
      - backend  
      
volumes:
  pgdata:
  broker-data:
  static_volume:

networks:
  backend: